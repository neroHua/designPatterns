设计模式

1.什么是设计模式：为了解决特定情境下相关问题的解决模式

2.设计模式的目标：使代码更加灵活，降低程序的耦合性，降低程序的维护成本，使程序更容易被人理解

3.主要原则为：面向接口，而非面向实现，面向组合而非面向继承
    3.1.开闭原则(根本原则)
        对扩展开放，对修改关闭

    3.2.单一职责原则
        每个类只做一件事情

    3.3.抽象类使用原则
        父类可以出现的地方，子类就可以出现

    3.4.依赖倒转原则
        面向接口编程，而不依赖具体实现

    3.5.接口隔离原则
        使用多个接口，要比使用一个接口，更加灵活

    3.6.迪米特法则
        一个实体类尽量少的与其他类有相互作用关系

    3.7.合成复用原则
        能使用组合就不要使用继承
        
4. 面向对象技术的几种常用技术对比
    4.1 类继承和接口继承 Class versus Interface Inheritance
        接口有隔离的有点
    
    4.2 继承和组合 Inheritance versus Composition
        继承优点：在编译期间定义，直观，并且更易于使用，方便的重写方法。
        继承缺点：不能在运行期间改变子类实现的父类的方法。子类实现父类的方法，就打破了父类的封装。父类的改变会直接影响到子类。父类子类有强制的依赖关系。
        组合优点: 依赖取决于运行期间的对象之间的关系，是动态的且没有强制依赖关系。对象的引用通过接口，没有打破封装。容易使类更加小。
        
